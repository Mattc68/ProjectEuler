scale_x_continuous(labels = scales::percent) +
geom_text_repel(aes(x = Sd, y = Return,  label = Fund)) +
theme_minimal() +
ggtitle(paste(input$AssetClassIn, input$PeriodIn, "Risk Return as of", input$DateIn))
})
output$RiskReturnTableOut = DT::renderDataTable(
DT::datatable(
ReturnIn(),
filter = "top",
rownames = FALSE) %>%
formatPercentage(c(2,3), digits = 2)
)
output$downloadChart = downloadHandler(
filename = paste0(input$AssetClassIn, " ", input$PeriodIn, " Risk Return Data ", input$Date, ".pdf"),
content = function(file){
out = render(
'C:\\Users\\Matt\\Workspace\\Data Science\\Shiny\\DynamoAPI\\DownloadRR.rmd',
output_format = pdf_document()
)
file.rename(out, file)
}
)
output$downloadData = downloadHandler(
filename = paste0(input$AssetClassIn, " ", input$PeriodIn, " Risk Return Data ", input$Date, ".csv"),
content = function(file){
write.csv(x = ReturnIn(), file, row.names = F)
}
)
}
ui = navbarPage(
title = "Risk Return",
theme = shinytheme('lumen'),
tabPanel(
title = "Plots",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "DateIn",
label = "Choose Date",
choices = levels(factor(Returns$Date)),
selected = '2018-06-30'
),
selectInput(
inputId = "AssetClassIn",
label = "Choose Asset Class",
choices = c("Marketable Diversifying Strategy", "Fixed Income", "International Equity", "US Equity"),
selected = 'Fixed Income'
),
selectInput(
inputId = "PeriodIn",
label = "Choose Time Period",
choices = c('1 Year', '3 Years', '5 Years', '10 Years'),
selected = '3 Years'
),
downloadButton("downloadData", "Download CSV"),
downloadButton("downloadChart", "Download Chart")
),
mainPanel(
title = "Risk Return Chart",
plotOutput("RiskReturnPlotOut"),
dataTableOutput("RiskReturnTableOut")
)
)
)
)
shinyApp(ui = ui, server = server)
library(rmarkdown)
##___ SHINY ___
server = function(input, output, session){
ReturnIn = reactive({
rtn = NULL
if(input$PeriodIn == '1 Year'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$OneYearRtn != 0 & Returns$OneYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'OneYearRtn'), which(names(Returns) == 'OneYearStdDev'))]
}else if(input$PeriodIn == '3 Years'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$ThreeYearRtn != 0 & Returns$ThreeYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'ThreeYearRtn'), which(names(Returns) == 'ThreeYearStdDev'))]
}else if(input$PeriodIn == '5 Years'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$FiveYearRtn != 0 & Returns$FiveYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'FiveYearRtn'), which(names(Returns) == 'FiveYearStdDev'))]
}else{
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$TenYearRtn != 0 & Returns$TenYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'TenYearRtn'), which(names(Returns) == 'TenYearStdDev'))]
}
names(rtn) = c('Fund', 'Return', 'Sd')
return(rtn)
})
output$RiskReturnPlotOut = renderPlot({
ggplot(data = ReturnIn()) +
geom_jitter(aes(x = Sd , y = Return), size = 3, color = '#002299') +
xlab("Risk") +
ylab("Return") +
scale_y_continuous(labels = scales::percent) +
scale_x_continuous(labels = scales::percent) +
geom_text_repel(aes(x = Sd, y = Return,  label = Fund)) +
theme_minimal() +
ggtitle(paste(input$AssetClassIn, input$PeriodIn, "Risk Return as of", input$DateIn))
})
output$RiskReturnTableOut = DT::renderDataTable(
DT::datatable(
ReturnIn(),
filter = "top",
rownames = FALSE) %>%
formatPercentage(c(2,3), digits = 2)
)
output$downloadChart = downloadHandler(
filename = paste0(input$AssetClassIn, " ", input$PeriodIn, " Risk Return Data ", input$Date, ".pdf"),
content = function(file){
out = render(
'C:\\Users\\Matt\\Workspace\\Data Science\\Shiny\\DynamoAPI\\DownloadRR.rmd',
output_format = pdf_document()
)
file.rename(out, file)
}
)
output$downloadData = downloadHandler(
filename = paste0(input$AssetClassIn, " ", input$PeriodIn, " Risk Return Data ", input$Date, ".csv"),
content = function(file){
write.csv(x = ReturnIn(), file, row.names = F)
}
)
}
ui = navbarPage(
title = "Risk Return",
theme = shinytheme('lumen'),
tabPanel(
title = "Plots",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "DateIn",
label = "Choose Date",
choices = levels(factor(Returns$Date)),
selected = '2018-06-30'
),
selectInput(
inputId = "AssetClassIn",
label = "Choose Asset Class",
choices = c("Marketable Diversifying Strategy", "Fixed Income", "International Equity", "US Equity"),
selected = 'Fixed Income'
),
selectInput(
inputId = "PeriodIn",
label = "Choose Time Period",
choices = c('1 Year', '3 Years', '5 Years', '10 Years'),
selected = '3 Years'
),
downloadButton("downloadData", "Download CSV"),
downloadButton("downloadChart", "Download Chart")
),
mainPanel(
title = "Risk Return Chart",
plotOutput("RiskReturnPlotOut"),
dataTableOutput("RiskReturnTableOut")
)
)
)
)
shinyApp(ui = ui, server = server)
server = function(input, output, session){
ReturnIn = reactive({
rtn = NULL
if(input$PeriodIn == '1 Year'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$OneYearRtn != 0 & Returns$OneYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'OneYearRtn'), which(names(Returns) == 'OneYearStdDev'))]
}else if(input$PeriodIn == '3 Years'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$ThreeYearRtn != 0 & Returns$ThreeYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'ThreeYearRtn'), which(names(Returns) == 'ThreeYearStdDev'))]
}else if(input$PeriodIn == '5 Years'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$FiveYearRtn != 0 & Returns$FiveYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'FiveYearRtn'), which(names(Returns) == 'FiveYearStdDev'))]
}else{
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$TenYearRtn != 0 & Returns$TenYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'TenYearRtn'), which(names(Returns) == 'TenYearStdDev'))]
}
names(rtn) = c('Fund', 'Return', 'Sd')
return(rtn)
})
output$RiskReturnPlotOut = renderPlot({
ggplot(data = ReturnIn()) +
geom_jitter(aes(x = Sd , y = Return), size = 3, color = '#002299') +
xlab("Risk") +
ylab("Return") +
scale_y_continuous(labels = scales::percent) +
scale_x_continuous(labels = scales::percent) +
geom_text_repel(aes(x = Sd, y = Return,  label = Fund)) +
theme_minimal() +
ggtitle(paste(input$AssetClassIn, input$PeriodIn, "Risk Return as of", input$DateIn))
})
output$RiskReturnTableOut = DT::renderDataTable(
DT::datatable(
ReturnIn(),
filter = "top",
rownames = FALSE) %>%
formatPercentage(c(2,3), digits = 2)
)
output$downloadChart = downloadHandler(
filename = paste0(input$AssetClassIn, " ", input$PeriodIn, " Risk Return Data ", input$Date, ".pdf"),
content = function(file){
out = render(
'C:\\Users\\Matt\\Workspace\\Data Science\\Shiny\\DynamoAPI\\DownloadRR.rmd',
output_format = pdf_document()
)
file.rename(out, file)
}
)
output$downloadData = downloadHandler(
filename = paste0(input$AssetClassIn, " ", input$PeriodIn, " Risk Return Data ", input$Date, ".csv"),
content = function(file){
write.csv(x = ReturnIn(), file, row.names = F)
}
)
}
ui = navbarPage(
title = "Risk Return",
theme = shinytheme('lumen'),
tabPanel(
title = "Plots",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "DateIn",
label = "Choose Date",
choices = levels(factor(Returns$Date)),
selected = '2018-06-30'
),
selectInput(
inputId = "AssetClassIn",
label = "Choose Asset Class",
choices = c("Marketable Diversifying Strategy", "Fixed Income", "International Equity", "US Equity"),
selected = 'Fixed Income'
),
selectInput(
inputId = "PeriodIn",
label = "Choose Time Period",
choices = c('1 Year', '3 Years', '5 Years', '10 Years'),
selected = '3 Years'
),
downloadButton("downloadData", "Download CSV"),
downloadButton("downloadChart", "Download Chart")
),
mainPanel(
title = "Risk Return Chart",
plotOutput("RiskReturnPlotOut"),
dataTableOutput("RiskReturnTableOut")
)
)
)
)
shinyApp(ui = ui, server = server)
##___ SHINY ___
server = function(input, output, session){
ReturnIn = reactive({
rtn = NULL
if(input$PeriodIn == '1 Year'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$OneYearRtn != 0 & Returns$OneYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'OneYearRtn'), which(names(Returns) == 'OneYearStdDev'))]
}else if(input$PeriodIn == '3 Years'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$ThreeYearRtn != 0 & Returns$ThreeYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'ThreeYearRtn'), which(names(Returns) == 'ThreeYearStdDev'))]
}else if(input$PeriodIn == '5 Years'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$FiveYearRtn != 0 & Returns$FiveYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'FiveYearRtn'), which(names(Returns) == 'FiveYearStdDev'))]
}else{
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$TenYearRtn != 0 & Returns$TenYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'TenYearRtn'), which(names(Returns) == 'TenYearStdDev'))]
}
names(rtn) = c('Fund', 'Return', 'Sd')
return(rtn)
})
output$RiskReturnPlotOut = renderPlot({
ggplot(data = ReturnIn()) +
geom_jitter(aes(x = Sd , y = Return), size = 3, color = '#002299') +
xlab("Risk") +
ylab("Return") +
scale_y_continuous(labels = scales::percent) +
scale_x_continuous(labels = scales::percent) +
geom_text_repel(aes(x = Sd, y = Return,  label = Fund)) +
theme_minimal() +
ggtitle(paste(input$AssetClassIn, input$PeriodIn, "Risk Return as of", input$DateIn))
})
output$RiskReturnTableOut = DT::renderDataTable(
DT::datatable(
ReturnIn(),
filter = "top",
rownames = FALSE) %>%
formatPercentage(c(2,3), digits = 2)
)
output$downloadChart = downloadHandler(
filename = paste0(input$AssetClassIn, " ", input$PeriodIn, " Risk Return Data ", input$Date, ".pdf"),
content = function(file){
out = render(
'C:\\Users\\Matt\\Workspace\\Data Science\\Shiny\\DynamoAPI\\DownloadRR.rmd',
output_format = pdf_document()
)
file.rename(out, file)
}
)
output$downloadData = downloadHandler(
filename = paste0(input$AssetClassIn, " ", input$PeriodIn, " Risk Return Data ", input$Date, ".csv"),
content = function(file){
write.csv(x = ReturnIn(), file, row.names = F)
}
)
}
ui = navbarPage(
title = "Risk Return",
theme = shinytheme('lumen'),
tabPanel(
title = "Plots",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "DateIn",
label = "Choose Date",
choices = levels(factor(Returns$Date)),
selected = '2018-06-30'
),
selectInput(
inputId = "AssetClassIn",
label = "Choose Asset Class",
choices = c("Marketable Diversifying Strategy", "Fixed Income", "International Equity", "US Equity"),
selected = 'Fixed Income'
),
selectInput(
inputId = "PeriodIn",
label = "Choose Time Period",
choices = c('1 Year', '3 Years', '5 Years', '10 Years'),
selected = '3 Years'
),
downloadButton("downloadData", "Download CSV"),
downloadButton("downloadChart", "Download Chart")
),
mainPanel(
title = "Risk Return Chart",
plotOutput("RiskReturnPlotOut"),
dataTableOutput("RiskReturnTableOut")
)
)
)
)
shinyApp(ui = ui, server = server)
##___ SHINY ___
server = function(input, output, session){
ReturnIn = reactive({
rtn = NULL
if(input$PeriodIn == '1 Year'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$OneYearRtn != 0 & Returns$OneYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'OneYearRtn'), which(names(Returns) == 'OneYearStdDev'))]
}else if(input$PeriodIn == '3 Years'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$ThreeYearRtn != 0 & Returns$ThreeYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'ThreeYearRtn'), which(names(Returns) == 'ThreeYearStdDev'))]
}else if(input$PeriodIn == '5 Years'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$FiveYearRtn != 0 & Returns$FiveYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'FiveYearRtn'), which(names(Returns) == 'FiveYearStdDev'))]
}else{
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$TenYearRtn != 0 & Returns$TenYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'TenYearRtn'), which(names(Returns) == 'TenYearStdDev'))]
}
names(rtn) = c('Fund', 'Return', 'Sd')
return(rtn)
})
output$RiskReturnPlotOut = renderPlot({
ggplot(data = ReturnIn()) +
geom_jitter(aes(x = Sd , y = Return), size = 3, color = '#002299') +
xlab("Risk") +
ylab("Return") +
scale_y_continuous(labels = scales::percent) +
scale_x_continuous(labels = scales::percent) +
geom_text_repel(aes(x = Sd, y = Return,  label = Fund)) +
theme_minimal() +
ggtitle(paste(input$AssetClassIn, input$PeriodIn, "Risk Return as of", input$DateIn))
})
output$RiskReturnTableOut = DT::renderDataTable(
DT::datatable(
ReturnIn(),
filter = "top",
rownames = FALSE) %>%
formatPercentage(c(2,3), digits = 2)
)
output$downloadChart = downloadHandler(
filename = paste0(input$AssetClassIn, " ", input$PeriodIn, " Risk Return Data ", input$Date, ".pdf"),
content = function(file){
out = render(
'C:\\Users\\Matt\\Workspace\\Data Science\\Shiny\\DynamoAPI\\DownloadRR.rmd',
output_format = pdf_document()
)
file.rename(out, file)
}
)
output$downloadData = downloadHandler(
filename = paste0(input$AssetClassIn, " ", input$PeriodIn, " Risk Return Data ", input$Date, ".csv"),
content = function(file){
write.csv(x = ReturnIn(), file, row.names = F)
}
)
}
ui = navbarPage(
title = "Risk Return",
theme = shinytheme('lumen'),
tabPanel(
title = "Plots",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "DateIn",
label = "Choose Date",
choices = levels(factor(Returns$Date)),
selected = '2018-06-30'
),
selectInput(
inputId = "AssetClassIn",
label = "Choose Asset Class",
choices = c("Marketable Diversifying Strategy", "Fixed Income", "International Equity", "US Equity"),
selected = 'Fixed Income'
),
selectInput(
inputId = "PeriodIn",
label = "Choose Time Period",
choices = c('1 Year', '3 Years', '5 Years', '10 Years'),
selected = '3 Years'
),
downloadButton("downloadData", "Download CSV"),
downloadButton("downloadChart", "Download Chart")
),
mainPanel(
title = "Risk Return Chart",
plotOutput("RiskReturnPlotOut"),
dataTableOutput("RiskReturnTableOut")
)
)
)
)
shinyApp(ui = ui, server = server)
##___ SHINY ___
server = function(input, output, session){
ReturnIn = reactive({
rtn = NULL
if(input$PeriodIn == '1 Year'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$OneYearRtn != 0 & Returns$OneYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'OneYearRtn'), which(names(Returns) == 'OneYearStdDev'))]
}else if(input$PeriodIn == '3 Years'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$ThreeYearRtn != 0 & Returns$ThreeYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'ThreeYearRtn'), which(names(Returns) == 'ThreeYearStdDev'))]
}else if(input$PeriodIn == '5 Years'){
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$FiveYearRtn != 0 & Returns$FiveYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'FiveYearRtn'), which(names(Returns) == 'FiveYearStdDev'))]
}else{
rtn = Returns[Returns$Date == input$DateIn & Returns$AssetClass == input$AssetClassIn & Returns$TenYearRtn != 0 & Returns$TenYearStdDev != 0, c(which(names(Returns) == 'Fund'), which(names(Returns) == 'TenYearRtn'), which(names(Returns) == 'TenYearStdDev'))]
}
names(rtn) = c('Fund', 'Return', 'Sd')
return(rtn)
})
output$RiskReturnPlotOut = renderPlot({
ggplot(data = ReturnIn()) +
geom_jitter(aes(x = Sd , y = Return), size = 3, color = '#002299') +
xlab("Risk") +
ylab("Return") +
scale_y_continuous(labels = scales::percent) +
scale_x_continuous(labels = scales::percent) +
geom_text_repel(aes(x = Sd, y = Return,  label = Fund)) +
theme_minimal() +
ggtitle(paste(input$AssetClassIn, input$PeriodIn, "Risk Return as of", input$DateIn))
})
output$RiskReturnTableOut = DT::renderDataTable(
DT::datatable(
ReturnIn(),
filter = "top",
rownames = FALSE) %>%
formatPercentage(c(2,3), digits = 2)
)
output$downloadChart = downloadHandler(
filename = paste0(input$AssetClassIn, " ", input$PeriodIn, " Risk Return Data ", input$Date, ".pdf"),
content = function(file){
out = render(
'C:\\Users\\Matt\\Workspace\\Data Science\\Shiny\\DynamoAPI\\DownloadRR.rmd',
output_format = pdf_document()
)
file.rename(out, file)
}
)
output$downloadData = downloadHandler(
filename = paste0(input$AssetClassIn, " ", input$PeriodIn, " Risk Return Data ", input$Date, ".csv"),
content = function(file){
write.csv(x = ReturnIn(), file, row.names = F)
}
)
}
ui = navbarPage(
title = "Risk Return",
theme = shinytheme('lumen'),
tabPanel(
title = "Plots",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "DateIn",
label = "Choose Date",
choices = levels(factor(Returns$Date)),
selected = '2018-06-30'
),
selectInput(
inputId = "AssetClassIn",
label = "Choose Asset Class",
choices = c("Marketable Diversifying Strategy", "Fixed Income", "International Equity", "US Equity"),
selected = 'Fixed Income'
),
selectInput(
inputId = "PeriodIn",
label = "Choose Time Period",
choices = c('1 Year', '3 Years', '5 Years', '10 Years'),
selected = '3 Years'
),
downloadButton("downloadData", "Download CSV"),
downloadButton("downloadChart", "Download Chart")
),
mainPanel(
title = "Risk Return Chart",
plotOutput("RiskReturnPlotOut"),
dataTableOutput("RiskReturnTableOut")
)
)
)
)
shinyApp(ui = ui, server = server)
install.packages(c("broom", "callr", "caTools", "chron", "data.table", "dbplyr", "digest", "dplyr", "evaluate", "ggplot2", "glue", "haven", "highr", "httpuv", "later", "modelr", "munsell", "openssl", "pillar", "pkgconfig", "psych", "purrr", "Rcpp", "reprex", "rlang", "rmarkdown", "scales", "shiny", "stringi", "stringr", "tidyr", "utf8", "xtable", "xts", "yaml"))
setwd("C:\\Users\\Matt\\Workspace\\ProjectEuler\\R")
dir()
source("problem_001")
source("problem_001.r")
problem_001
